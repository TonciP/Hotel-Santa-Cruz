// <auto-generated />
using System;
using CheckOut.Infraestructure.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheckOut.Infraestructure.Ef.MIgrations
{
    [DbContext(typeof(WriteDbContext))]
    [Migration("20221108181247_InitialStructure")]
    partial class InitialStructure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CheckOut.Domain.Model.checkouts.CheckOutr", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("checkoutId");

                    b.Property<Guid>("CheckIn")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("checkinId");

                    b.Property<Guid>("CreditCartId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("credicartId");

                    b.Property<Guid>("_clienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("_facturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("_pagoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("_facturaId");

                    b.HasIndex("_pagoId");

                    b.ToTable("checkouts", (string)null);
                });

            modelBuilder.Entity("CheckOut.Domain.Model.Facturas.DetalleFactura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("detalleFacturaId");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<decimal>("PrecioServicio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("precioServicio");

                    b.Property<Guid>("ServicioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("servicioId");

                    b.HasKey("Id");

                    b.ToTable("DetalleFactura", (string)null);
                });

            modelBuilder.Entity("CheckOut.Domain.Model.Facturas.Facturar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("facturaId");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechafactura");

                    b.Property<int>("NumeroFactura")
                        .HasColumnType("int")
                        .HasColumnName("numerofactura");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total");

                    b.Property<Guid>("_detalleFacturaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("_detalleFacturaId");

                    b.ToTable("facturas", (string)null);
                });

            modelBuilder.Entity("CheckOut.Domain.Model.Pagos.Pago", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("pagoId");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total");

                    b.HasKey("Id");

                    b.ToTable("pagos", (string)null);
                });

            modelBuilder.Entity("CheckOut.Domain.Model.checkouts.CheckOutr", b =>
                {
                    b.HasOne("CheckOut.Domain.Model.Facturas.Facturar", "_factura")
                        .WithMany()
                        .HasForeignKey("_facturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheckOut.Domain.Model.Pagos.Pago", "_pago")
                        .WithMany()
                        .HasForeignKey("_pagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_factura");

                    b.Navigation("_pago");
                });

            modelBuilder.Entity("CheckOut.Domain.Model.Facturas.Facturar", b =>
                {
                    b.HasOne("CheckOut.Domain.Model.Facturas.DetalleFactura", "_detalleFactura")
                        .WithMany()
                        .HasForeignKey("_detalleFacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_detalleFactura");
                });
#pragma warning restore 612, 618
        }
    }
}
