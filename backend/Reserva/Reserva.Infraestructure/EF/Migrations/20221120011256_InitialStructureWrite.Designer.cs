// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reserva.Infraestructure.EF.Context;

#nullable disable

namespace Reserva.Infraestructure.Ef.Migrations
{
    [DbContext(typeof(WriteDbContext))]
    [Migration("20221120011256_InitialStructureWrite")]
    partial class InitialStructureWrite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Reserva.Domain.Model.Clientes.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("clienteId");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombres");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Reserva.Domain.Model.Estadias.Estadia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("estadiaId");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaIngreso");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaSalida");

                    b.HasKey("Id");

                    b.ToTable("estadia", (string)null);
                });

            modelBuilder.Entity("Reserva.Domain.Model.Reservas.Reservar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reservaId");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("clienteId");

                    b.Property<Guid>("EstadiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("estado");

                    b.Property<Guid?>("TipoHabitacionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("habitacionId");

                    b.Property<Guid?>("TrackingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("trackingId");

                    b.HasKey("Id");

                    b.HasIndex("EstadiaId");

                    b.ToTable("Reservas", (string)null);
                });

            modelBuilder.Entity("Reserva.Domain.Model.TipoHabitaciones.TipoHabitacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("habitacionId");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int")
                        .HasColumnName("cantidadDisponible");

                    b.Property<decimal>("Costo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("costo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<string>("NombreHabitacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreHabitacion");

                    b.HasKey("Id");

                    b.ToTable("TipoHabitacion", (string)null);
                });

            modelBuilder.Entity("Reserva.Domain.Model.Trackings.Tracking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("trackingId");

                    b.Property<DateTime>("Duracion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hash");

                    b.HasKey("Id");

                    b.ToTable("Tracking", (string)null);
                });

            modelBuilder.Entity("Reserva.Domain.Model.Reservas.Reservar", b =>
                {
                    b.HasOne("Reserva.Domain.Model.Estadias.Estadia", "Estadia")
                        .WithMany()
                        .HasForeignKey("EstadiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estadia");
                });
#pragma warning restore 612, 618
        }
    }
}
